{"ast":null,"code":"var _jsxFileName = \"/home/collins/Desktop/todolist-app/client/src/components/EditTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditTodoForm = _ref => {\n  _s();\n  let {\n    editTodo,\n    task\n  } = _ref;\n  const [value, setValue] = useState(task.task);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!value.trim()) return;\n    try {\n      setIsSubmitting(true);\n      await editTodo(task.id, value);\n    } catch (error) {\n      console.error('Update failed:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"TodoForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      className: \"todo-input\",\n      placeholder: \"Update task\",\n      disabled: isSubmitting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Updating...' : 'Update Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTodoForm, \"DYWHibXP1lHwpzZsd9HDCaZSHsI=\");\n_c = EditTodoForm;\nvar _c;\n$RefreshReg$(_c, \"EditTodoForm\");","map":{"version":3,"names":["React","useState","EditTodoForm","editTodo","task","value","setValue","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","trim","id","error","console","target"],"sources":["/home/collins/Desktop/todolist-app/client/src/components/EditTodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const EditTodoForm = ({ editTodo, task }) => {\n  const [value, setValue] = useState(task.task);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!value.trim()) return;\n    \n    try {\n      setIsSubmitting(true);\n      await editTodo(task.id, value);\n    } catch (error) {\n      console.error('Update failed:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"TodoForm\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"Update task\"\n        disabled={isSubmitting}\n      />\n      <button \n        type=\"submit\" \n        className=\"todo-btn\"\n        disabled={isSubmitting}\n      >\n        {isSubmitting ? 'Updating...' : 'Update Task'}\n      </button>\n    </form>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,OAAO,MAAMC,YAAY,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,QAAQ;IAAEC;EAAK,CAAC;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC;EAC7C,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACN,KAAK,CAACO,IAAI,EAAE,EAAE;IAEnB,IAAI;MACFJ,eAAe,CAAC,IAAI,CAAC;MACrB,MAAML,QAAQ,CAACC,IAAI,CAACS,EAAE,EAAER,KAAK,CAAC;IAChC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,SAAS;MACRN,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEC,YAAa;IAAC,SAAS,EAAC,UAAU;IAAA,wBAChD;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEJ,KAAM;MACb,QAAQ,EAAGK,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACM,MAAM,CAACX,KAAK,CAAE;MAC1C,SAAS,EAAC,YAAY;MACtB,WAAW,EAAC,aAAa;MACzB,QAAQ,EAAEE;IAAa;MAAA;MAAA;MAAA;IAAA,QACvB,eACF;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,UAAU;MACpB,QAAQ,EAAEA,YAAa;MAAA,UAEtBA,YAAY,GAAG,aAAa,GAAG;IAAa;MAAA;MAAA;MAAA;IAAA,QACtC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,GArCWL,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}