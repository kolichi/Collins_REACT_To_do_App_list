{"ast":null,"code":"var _jsxFileName = \"/home/collins/Desktop/todolist-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { TodoWrapper } from './components/TodoWrapper';\nimport { AuthPage } from './components/AuthPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check for existing token on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(TodoWrapper, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AuthPage, {\n      onLogin: () => setIsLoggedIn(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoWrapper","AuthPage","App","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleLogout","removeItem"],"sources":["/home/collins/Desktop/todolist-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { TodoWrapper } from './components/TodoWrapper';\nimport { AuthPage } from './components/AuthPage';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check for existing token on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <TodoWrapper onLogout={handleLogout} />\n      ) : (\n        <AuthPage onLogin={() => setIsLoggedIn(true)} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,uBAAuB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCL,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,UACjBD,UAAU,gBACT,QAAC,WAAW;MAAC,QAAQ,EAAEK;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEvC,QAAC,QAAQ;MAAC,OAAO,EAAE,MAAMJ,aAAa,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA;EAC9C;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAzBQF,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}